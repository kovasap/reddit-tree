{
"version":3,
"file":"module$node_modules$d3_array$src$mode.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/d3-array/src/mode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$src$mode\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = mode;\n\nvar _internmap = require(\"internmap\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction mode(values, valueof) {\n  var counts = new _internmap.InternMap();\n\n  if (valueof === undefined) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n\n        if (value != null && value >= value) {\n          counts.set(value, (counts.get(value) || 0) + 1);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    var index = -1;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = values[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _value = _step2.value;\n\n        if ((_value = valueof(_value, ++index, values)) != null && _value >= _value) {\n          counts.set(_value, (counts.get(_value) || 0) + 1);\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  var modeValue;\n  var modeCount = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = counts[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _step3$value = _slicedToArray(_step3.value, 2),\n          _value2 = _step3$value[0],\n          count = _step3$value[1];\n\n      if (count > modeCount) {\n        modeCount = count;\n        modeValue = _value2;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return modeValue;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","mode","values","valueof","counts","_internmap","InternMap","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","done","next","set","get","err","index","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value","modeCount","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","Array","isArray","arr","_s","prototype","toString","call","_arr","_n","_d","_e","_i","push","i","length","TypeError","_value2","_step3$value","count","modeValue"]
}
