shadow$provide.module$node_modules$robust_predicates$esm$insphere=function(global,require,module,exports){function sum_three_scale(a,b,c,az,bz,cz,out){return(0,_util.sum_three)((0,_util.scale)(4,a,az,_8),_8,(0,_util.scale)(4,b,bz,_8b),_8b,(0,_util.scale)(4,c,cz,_8c),_8c,_16,out)}function liftexact(alen,a,blen,b,clen,c,dlen,d,x,y,z,out){alen=(0,_util.sum)((0,_util.sum)(alen,a,blen,b,_48),_48,(0,_util.negate)((0,_util.sum)(clen,c,dlen,d,_48b),_48b),_48b,_96);return(0,_util.sum_three)((0,_util.scale)((0,
_util.scale)(alen,_96,x,_192),_192,x,_384x),_384x,(0,_util.scale)((0,_util.scale)(alen,_96,y,_192),_192,y,_384y),_384y,(0,_util.scale)((0,_util.scale)(alen,_96,z,_192),_192,z,_384z),_384z,_768,out)}function liftadapt(a,b,c,az,bz,cz,x,y,z,out){a=sum_three_scale(a,b,c,az,bz,cz,_24);return(0,_util.sum_three)((0,_util.scale)((0,_util.scale)(a,_24,x,_48),_48,x,xdet),xdet,(0,_util.scale)((0,_util.scale)(a,_24,y,_48),_48,y,ydet),ydet,(0,_util.scale)((0,_util.scale)(a,_24,z,_48),_48,z,zdet),zdet,_192,out)}
Object.defineProperty(exports,"__esModule",{value:!0});exports.insphere=function(ax,ay,az,bx,by,bz,cx,cy,cz,dx,dy,dz,ex,ey,ez){var aex=ax-ex,bex=bx-ex,cex=cx-ex,dex=dx-ex,aey=ay-ey,bey=by-ey,cey=cy-ey,dey=dy-ey,aez=az-ez,bez=bz-ez,cez=cz-ez,dez=dz-ez,aexbey=aex*bey,bexaey=bex*aey,ab=aexbey-bexaey,bexcey=bex*cey,cexbey=cex*bey,bc=bexcey-cexbey,cexdey=cex*dey,dexcey=dex*cey,cd$jscomp$0=cexdey-dexcey,dexaey=dex*aey,aexdey=aex*dey,da=dexaey-aexdey,aexcey=aex*cey,cexaey=cex*aey,ac$jscomp$0=aexcey-cexaey,
bexdey=bex*dey,dexbey=dex*bey,bd$jscomp$0=bexdey-dexbey,alift=aex*aex+aey*aey+aez*aez,blift=bex*bex+bey*bey+bez*bez,clift=cex*cex+cey*cey+cez*cez,dlift=dex*dex+dey*dey+dez*dez,det=clift*(dez*ab+aez*bd$jscomp$0+bez*da)-dlift*(aez*bc-bez*ac$jscomp$0+cez*ab)+(alift*(bez*cd$jscomp$0-cez*bd$jscomp$0+dez*bc)-blift*(cez*da+dez*ac$jscomp$0+aez*cd$jscomp$0)),aezplus=Math.abs(aez),bezplus=Math.abs(bez),cezplus=Math.abs(cez),dezplus=Math.abs(dez),aexbeyplus=Math.abs(aexbey),bexaeyplus=Math.abs(bexaey),bexceyplus=
Math.abs(bexcey),cexbeyplus=Math.abs(cexbey),cexdeyplus=Math.abs(cexdey),dexceyplus=Math.abs(dexcey),dexaeyplus=Math.abs(dexaey),aexdeyplus=Math.abs(aexdey),aexceyplus=Math.abs(aexcey),cexaeyplus=Math.abs(cexaey),bexdeyplus=Math.abs(bexdey),dexbeyplus=Math.abs(dexbey),permanent=((cexdeyplus+dexceyplus)*bezplus+(dexbeyplus+bexdeyplus)*cezplus+(bexceyplus+cexbeyplus)*dezplus)*alift+((dexaeyplus+aexdeyplus)*cezplus+(aexceyplus+cexaeyplus)*dezplus+(cexdeyplus+dexceyplus)*aezplus)*blift+((aexbeyplus+bexaeyplus)*
dezplus+(bexdeyplus+dexbeyplus)*aezplus+(dexaeyplus+aexdeyplus)*bezplus)*clift+((bexceyplus+cexbeyplus)*aezplus+(cexaeyplus+aexceyplus)*bezplus+(aexbeyplus+bexaeyplus)*cezplus)*dlift,errbound=isperrboundA*permanent;if(det>errbound||-det>errbound)return det;var aex$jscomp$0=ax-ex,bex$jscomp$0=bx-ex,cex$jscomp$0=cx-ex,dex$jscomp$0=dx-ex,aey$jscomp$0=ay-ey,bey$jscomp$0=by-ey,cey$jscomp$0=cy-ey,dey$jscomp$0=dy-ey,aez$jscomp$0=az-ez,bez$jscomp$0=bz-ez,cez$jscomp$0=cz-ez,dez$jscomp$0=dz-ez;var s1=aex$jscomp$0*
bey$jscomp$0;var c=_util.splitter*aex$jscomp$0;var ahi=c-(c-aex$jscomp$0);var alo=aex$jscomp$0-ahi;c=_util.splitter*bey$jscomp$0;var bhi=c-(c-bey$jscomp$0);var blo=bey$jscomp$0-bhi;var s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);var t1=bex$jscomp$0*aey$jscomp$0;c=_util.splitter*bex$jscomp$0;ahi=c-(c-bex$jscomp$0);alo=bex$jscomp$0-ahi;c=_util.splitter*aey$jscomp$0;bhi=c-(c-aey$jscomp$0);blo=aey$jscomp$0-bhi;var t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);var _i=s0-t0;var bvirt=s0-_i;ab$jscomp$0[0]=s0-(_i+
bvirt)+(bvirt-t0);var _j=s1+_i;bvirt=_j-s1;var _0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ab$jscomp$0[1]=_0-(_i+bvirt)+(bvirt-t1);var ab3=_j+_i;bvirt=ab3-_j;ab$jscomp$0[2]=_j-(ab3-bvirt)+(_i-bvirt);ab$jscomp$0[3]=ab3;s1=bex$jscomp$0*cey$jscomp$0;c=_util.splitter*bex$jscomp$0;ahi=c-(c-bex$jscomp$0);alo=bex$jscomp$0-ahi;c=_util.splitter*cey$jscomp$0;bhi=c-(c-cey$jscomp$0);blo=cey$jscomp$0-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=cex$jscomp$0*bey$jscomp$0;c=_util.splitter*cex$jscomp$0;ahi=
c-(c-cex$jscomp$0);alo=cex$jscomp$0-ahi;c=_util.splitter*bey$jscomp$0;bhi=c-(c-bey$jscomp$0);blo=bey$jscomp$0-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;bc$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;bc$jscomp$0[1]=_0-(_i+bvirt)+(bvirt-t1);var bc3=_j+_i;bvirt=bc3-_j;bc$jscomp$0[2]=_j-(bc3-bvirt)+(_i-bvirt);bc$jscomp$0[3]=bc3;s1=cex$jscomp$0*dey$jscomp$0;c=_util.splitter*cex$jscomp$0;ahi=c-(c-cex$jscomp$0);alo=cex$jscomp$0-
ahi;c=_util.splitter*dey$jscomp$0;bhi=c-(c-dey$jscomp$0);blo=dey$jscomp$0-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=dex$jscomp$0*cey$jscomp$0;c=_util.splitter*dex$jscomp$0;ahi=c-(c-dex$jscomp$0);alo=dex$jscomp$0-ahi;c=_util.splitter*cey$jscomp$0;bhi=c-(c-cey$jscomp$0);blo=cey$jscomp$0-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;cd[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;cd[1]=_0-(_i+bvirt)+(bvirt-t1);var cd3=_j+_i;
bvirt=cd3-_j;cd[2]=_j-(cd3-bvirt)+(_i-bvirt);cd[3]=cd3;s1=dex$jscomp$0*aey$jscomp$0;c=_util.splitter*dex$jscomp$0;ahi=c-(c-dex$jscomp$0);alo=dex$jscomp$0-ahi;c=_util.splitter*aey$jscomp$0;bhi=c-(c-aey$jscomp$0);blo=aey$jscomp$0-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=aex$jscomp$0*dey$jscomp$0;c=_util.splitter*aex$jscomp$0;ahi=c-(c-aex$jscomp$0);alo=aex$jscomp$0-ahi;c=_util.splitter*dey$jscomp$0;bhi=c-(c-dey$jscomp$0);blo=dey$jscomp$0-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=
s0-_i;da$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;da$jscomp$0[1]=_0-(_i+bvirt)+(bvirt-t1);var da3=_j+_i;bvirt=da3-_j;da$jscomp$0[2]=_j-(da3-bvirt)+(_i-bvirt);da$jscomp$0[3]=da3;s1=aex$jscomp$0*cey$jscomp$0;c=_util.splitter*aex$jscomp$0;ahi=c-(c-aex$jscomp$0);alo=aex$jscomp$0-ahi;c=_util.splitter*cey$jscomp$0;bhi=c-(c-cey$jscomp$0);blo=cey$jscomp$0-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=cex$jscomp$0*aey$jscomp$0;c=_util.splitter*
cex$jscomp$0;ahi=c-(c-cex$jscomp$0);alo=cex$jscomp$0-ahi;c=_util.splitter*aey$jscomp$0;bhi=c-(c-aey$jscomp$0);blo=aey$jscomp$0-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;ac[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ac[1]=_0-(_i+bvirt)+(bvirt-t1);var ac3=_j+_i;bvirt=ac3-_j;ac[2]=_j-(ac3-bvirt)+(_i-bvirt);ac[3]=ac3;s1=bex$jscomp$0*dey$jscomp$0;c=_util.splitter*bex$jscomp$0;ahi=c-(c-bex$jscomp$0);alo=bex$jscomp$0-ahi;c=_util.splitter*
dey$jscomp$0;bhi=c-(c-dey$jscomp$0);blo=dey$jscomp$0-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=dex$jscomp$0*bey$jscomp$0;c=_util.splitter*dex$jscomp$0;ahi=c-(c-dex$jscomp$0);alo=dex$jscomp$0-ahi;c=_util.splitter*bey$jscomp$0;bhi=c-(c-bey$jscomp$0);blo=bey$jscomp$0-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;bd[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;bd[1]=_0-(_i+bvirt)+(bvirt-t1);var bd3=_j+_i;bvirt=bd3-_j;bd[2]=_j-
(bd3-bvirt)+(_i-bvirt);bd[3]=bd3;var finlen=(0,_util.sum)((0,_util.sum)((0,_util.negate)(liftadapt(bc$jscomp$0,cd,bd,dez$jscomp$0,bez$jscomp$0,-cez$jscomp$0,aex$jscomp$0,aey$jscomp$0,aez$jscomp$0,adet),adet),adet,liftadapt(cd,da$jscomp$0,ac,aez$jscomp$0,cez$jscomp$0,dez$jscomp$0,bex$jscomp$0,bey$jscomp$0,bez$jscomp$0,bdet),bdet,abdet),abdet,(0,_util.sum)((0,_util.negate)(liftadapt(da$jscomp$0,ab$jscomp$0,bd,bez$jscomp$0,dez$jscomp$0,aez$jscomp$0,cex$jscomp$0,cey$jscomp$0,cez$jscomp$0,cdet),cdet),
cdet,liftadapt(ab$jscomp$0,bc$jscomp$0,ac,cez$jscomp$0,aez$jscomp$0,-bez$jscomp$0,dex$jscomp$0,dey$jscomp$0,dez$jscomp$0,ddet),ddet,cddet),cddet,fin),det$jscomp$0=(0,_util.estimate)(finlen,fin),errbound$jscomp$0=isperrboundB*permanent;if(det$jscomp$0>=errbound$jscomp$0||-det$jscomp$0>=errbound$jscomp$0)var JSCompiler_inline_result=det$jscomp$0;else{bvirt=ax-aex$jscomp$0;var aextail=ax-(aex$jscomp$0+bvirt)+(bvirt-ex);bvirt=ay-aey$jscomp$0;var aeytail=ay-(aey$jscomp$0+bvirt)+(bvirt-ey);bvirt=az-aez$jscomp$0;
var aeztail=az-(aez$jscomp$0+bvirt)+(bvirt-ez);bvirt=bx-bex$jscomp$0;var bextail=bx-(bex$jscomp$0+bvirt)+(bvirt-ex);bvirt=by-bey$jscomp$0;var beytail=by-(bey$jscomp$0+bvirt)+(bvirt-ey);bvirt=bz-bez$jscomp$0;var beztail=bz-(bez$jscomp$0+bvirt)+(bvirt-ez);bvirt=cx-cex$jscomp$0;var cextail=cx-(cex$jscomp$0+bvirt)+(bvirt-ex);bvirt=cy-cey$jscomp$0;var ceytail=cy-(cey$jscomp$0+bvirt)+(bvirt-ey);bvirt=cz-cez$jscomp$0;var ceztail=cz-(cez$jscomp$0+bvirt)+(bvirt-ez);bvirt=dx-dex$jscomp$0;var dextail=dx-(dex$jscomp$0+
bvirt)+(bvirt-ex);bvirt=dy-dey$jscomp$0;var deytail=dy-(dey$jscomp$0+bvirt)+(bvirt-ey);bvirt=dz-dez$jscomp$0;var deztail=dz-(dez$jscomp$0+bvirt)+(bvirt-ez);if(0===aextail&&0===aeytail&&0===aeztail&&0===bextail&&0===beytail&&0===beztail&&0===cextail&&0===ceytail&&0===ceztail&&0===dextail&&0===deytail&&0===deztail)JSCompiler_inline_result=det$jscomp$0;else{errbound$jscomp$0=isperrboundC*permanent+_util.resulterrbound*Math.abs(det$jscomp$0);var abeps=aex$jscomp$0*beytail+bey$jscomp$0*aextail-(aey$jscomp$0*
bextail+bex$jscomp$0*aeytail),bceps=bex$jscomp$0*ceytail+cey$jscomp$0*bextail-(bey$jscomp$0*cextail+cex$jscomp$0*beytail),cdeps=cex$jscomp$0*deytail+dey$jscomp$0*cextail-(cey$jscomp$0*dextail+dex$jscomp$0*ceytail),daeps=dex$jscomp$0*aeytail+aey$jscomp$0*dextail-(dey$jscomp$0*aextail+aex$jscomp$0*deytail),aceps=aex$jscomp$0*ceytail+cey$jscomp$0*aextail-(aey$jscomp$0*cextail+cex$jscomp$0*aeytail),bdeps=bex$jscomp$0*deytail+dey$jscomp$0*bextail-(bey$jscomp$0*dextail+dex$jscomp$0*beytail);det$jscomp$0+=
(bex$jscomp$0*bex$jscomp$0+bey$jscomp$0*bey$jscomp$0+bez$jscomp$0*bez$jscomp$0)*(cez$jscomp$0*daeps+dez$jscomp$0*aceps+aez$jscomp$0*cdeps+(ceztail*da3+deztail*ac3+aeztail*cd3))+(dex$jscomp$0*dex$jscomp$0+dey$jscomp$0*dey$jscomp$0+dez$jscomp$0*dez$jscomp$0)*(aez$jscomp$0*bceps-bez$jscomp$0*aceps+cez$jscomp$0*abeps+(aeztail*bc3-beztail*ac3+ceztail*ab3))-((aex$jscomp$0*aex$jscomp$0+aey$jscomp$0*aey$jscomp$0+aez$jscomp$0*aez$jscomp$0)*(bez$jscomp$0*cdeps-cez$jscomp$0*bdeps+dez$jscomp$0*bceps+(beztail*
cd3-ceztail*bd3+deztail*bc3))+(cex$jscomp$0*cex$jscomp$0+cey$jscomp$0*cey$jscomp$0+cez$jscomp$0*cez$jscomp$0)*(dez$jscomp$0*abeps+aez$jscomp$0*bdeps+bez$jscomp$0*daeps+(deztail*ab3+aeztail*bd3+beztail*da3)))+2*((bex$jscomp$0*bextail+bey$jscomp$0*beytail+bez$jscomp$0*beztail)*(cez$jscomp$0*da3+dez$jscomp$0*ac3+aez$jscomp$0*cd3)+(dex$jscomp$0*dextail+dey$jscomp$0*deytail+dez$jscomp$0*deztail)*(aez$jscomp$0*bc3-bez$jscomp$0*ac3+cez$jscomp$0*ab3)-((aex$jscomp$0*aextail+aey$jscomp$0*aeytail+aez$jscomp$0*
aeztail)*(bez$jscomp$0*cd3-cez$jscomp$0*bd3+dez$jscomp$0*bc3)+(cex$jscomp$0*cextail+cey$jscomp$0*ceytail+cez$jscomp$0*ceztail)*(dez$jscomp$0*ab3+aez$jscomp$0*bd3+bez$jscomp$0*da3)));if(det$jscomp$0>=errbound$jscomp$0||-det$jscomp$0>=errbound$jscomp$0)var JSCompiler_temp=det$jscomp$0;else{var s1$jscomp$0=ax*by;var c$jscomp$0=_util.splitter*ax;var ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ax);var alo$jscomp$0=ax-ahi$jscomp$0;c$jscomp$0=_util.splitter*by;var bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-by);var blo$jscomp$0=
by-bhi$jscomp$0;var s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);var t1$jscomp$0=bx*ay;c$jscomp$0=_util.splitter*bx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bx);alo$jscomp$0=bx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ay;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ay);blo$jscomp$0=ay-bhi$jscomp$0;var t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);
var _i$jscomp$0=s0$jscomp$0-t0$jscomp$0;var bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ab$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);var _j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;var _0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;ab$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);var u3=_j$jscomp$0+
_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;ab$jscomp$0[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);ab$jscomp$0[3]=u3;s1$jscomp$0=bx*cy;c$jscomp$0=_util.splitter*bx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bx);alo$jscomp$0=bx-ahi$jscomp$0;c$jscomp$0=_util.splitter*cy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cy);blo$jscomp$0=cy-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=cx*by;c$jscomp$0=
_util.splitter*cx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-cx);alo$jscomp$0=cx-ahi$jscomp$0;c$jscomp$0=_util.splitter*by;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-by);blo$jscomp$0=by-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;bc$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;
bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;bc$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;bc$jscomp$0[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);bc$jscomp$0[3]=u3;s1$jscomp$0=cx*dy;c$jscomp$0=_util.splitter*cx;ahi$jscomp$0=c$jscomp$0-
(c$jscomp$0-cx);alo$jscomp$0=cx-ahi$jscomp$0;c$jscomp$0=_util.splitter*dy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dy);blo$jscomp$0=dy-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=dx*cy;c$jscomp$0=_util.splitter*dx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dx);alo$jscomp$0=dx-ahi$jscomp$0;c$jscomp$0=_util.splitter*cy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cy);blo$jscomp$0=cy-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*
blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;cd[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;cd[1]=_0$jscomp$0-
(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;cd[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);cd[3]=u3;s1$jscomp$0=dx*ey;c$jscomp$0=_util.splitter*dx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dx);alo$jscomp$0=dx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ey);blo$jscomp$0=ey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-
ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=ex*dy;c$jscomp$0=_util.splitter*ex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ex);alo$jscomp$0=ex-ahi$jscomp$0;c$jscomp$0=_util.splitter*dy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dy);blo$jscomp$0=dy-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;de[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-
t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;de[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;de[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);de[3]=u3;s1$jscomp$0=ex*ay;c$jscomp$0=_util.splitter*ex;
ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ex);alo$jscomp$0=ex-ahi$jscomp$0;c$jscomp$0=_util.splitter*ay;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ay);blo$jscomp$0=ay-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=ax*ey;c$jscomp$0=_util.splitter*ax;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ax);alo$jscomp$0=ax-ahi$jscomp$0;c$jscomp$0=_util.splitter*ey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ey);blo$jscomp$0=ey-bhi$jscomp$0;
t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ea[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-
_i$jscomp$0;ea[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;ea[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);ea[3]=u3;s1$jscomp$0=ax*cy;c$jscomp$0=_util.splitter*ax;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ax);alo$jscomp$0=ax-ahi$jscomp$0;c$jscomp$0=_util.splitter*cy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cy);blo$jscomp$0=cy-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-
alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=cx*ay;c$jscomp$0=_util.splitter*cx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-cx);alo$jscomp$0=cx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ay;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ay);blo$jscomp$0=ay-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ac[0]=s0$jscomp$0-(_i$jscomp$0+
bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;ac[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;ac[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);ac[3]=u3;s1$jscomp$0=bx*
dy;c$jscomp$0=_util.splitter*bx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bx);alo$jscomp$0=bx-ahi$jscomp$0;c$jscomp$0=_util.splitter*dy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dy);blo$jscomp$0=dy-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=dx*by;c$jscomp$0=_util.splitter*dx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dx);alo$jscomp$0=dx-ahi$jscomp$0;c$jscomp$0=_util.splitter*by;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-
by);blo$jscomp$0=by-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;bd[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;
bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;bd[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;bd[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);bd[3]=u3;s1$jscomp$0=cx*ey;c$jscomp$0=_util.splitter*cx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-cx);alo$jscomp$0=cx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ey);blo$jscomp$0=ey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-
ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=ex*cy;c$jscomp$0=_util.splitter*ex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ex);alo$jscomp$0=ex-ahi$jscomp$0;c$jscomp$0=_util.splitter*cy;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cy);blo$jscomp$0=cy-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ce[0]=
s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;ce[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;ce[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);
ce[3]=u3;s1$jscomp$0=dx*ay;c$jscomp$0=_util.splitter*dx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dx);alo$jscomp$0=dx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ay;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ay);blo$jscomp$0=ay-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=ax*dy;c$jscomp$0=_util.splitter*ax;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ax);alo$jscomp$0=ax-ahi$jscomp$0;c$jscomp$0=_util.splitter*dy;bhi$jscomp$0=
c$jscomp$0-(c$jscomp$0-dy);blo$jscomp$0=dy-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;da$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);
_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;da$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;da$jscomp$0[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);da$jscomp$0[3]=u3;s1$jscomp$0=ex*by;c$jscomp$0=_util.splitter*ex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-ex);alo$jscomp$0=ex-ahi$jscomp$0;c$jscomp$0=_util.splitter*by;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-by);blo$jscomp$0=
by-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=bx*ey;c$jscomp$0=_util.splitter*bx;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bx);alo$jscomp$0=bx-ahi$jscomp$0;c$jscomp$0=_util.splitter*ey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-ey);blo$jscomp$0=ey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=
s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;eb[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;eb[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);u3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=u3-_j$jscomp$0;
eb[2]=_j$jscomp$0-(u3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);eb[3]=u3;var abclen=sum_three_scale(ab$jscomp$0,bc$jscomp$0,ac,cz,az,-bz,abc),bcdlen=sum_three_scale(bc$jscomp$0,cd,bd,dz,bz,-cz,bcd),cdelen=sum_three_scale(cd,de,ce,ez,cz,-dz,cde),dealen=sum_three_scale(de,ea,da$jscomp$0,az,dz,-ez,dea),eablen=sum_three_scale(ea,ab$jscomp$0,eb,bz,ez,-az,eab),abdlen=sum_three_scale(ab$jscomp$0,bd,da$jscomp$0,dz,az,bz,abd),bcelen=sum_three_scale(bc$jscomp$0,ce,eb,ez,bz,cz,bce),cdalen=sum_three_scale(cd,
da$jscomp$0,ac,az,cz,dz,cda),deblen=sum_three_scale(de,eb,bd,bz,dz,ez,deb),eaclen=sum_three_scale(ea,ac,ce,cz,ez,az,eac),deterlen=(0,_util.sum_three)(liftexact(cdelen,cde,bcelen,bce,deblen,deb,bcdlen,bcd,ax,ay,az,adet),adet,liftexact(dealen,dea,cdalen,cda,eaclen,eac,cdelen,cde,bx,by,bz,bdet),bdet,(0,_util.sum_three)(liftexact(eablen,eab,deblen,deb,abdlen,abd,dealen,dea,cx,cy,cz,cdet),cdet,liftexact(abclen,abc,eaclen,eac,bcelen,bce,eablen,eab,dx,dy,dz,ddet),ddet,liftexact(bcdlen,bcd,abdlen,abd,cdalen,
cda,abclen,abc,ex,ey,ez,edet),edet,cddet,cdedet),cdedet,abdet,deter);JSCompiler_temp=deter[deterlen-1]}JSCompiler_inline_result=JSCompiler_temp}}return-JSCompiler_inline_result};exports.inspherefast=function(pax,pay,paz,pbx,pby,pbz,pcx,pcy,pcz,pdx,pdy,pdz,pex,pey,pez){pax-=pex;pbx-=pex;pcx-=pex;pdx-=pex;pay-=pey;pby-=pey;pcy-=pey;pdy-=pey;paz-=pez;pbz-=pez;pcz-=pez;pdz-=pez;pez=pax*pby-pbx*pay;pey=pbx*pcy-pcx*pby;pex=pcx*pdy-pdx*pcy;var da=pdx*pay-pax*pdy,ac=pax*pcy-pcx*pay,bd=pbx*pdy-pdx*pby;return(pcx*
pcx+pcy*pcy+pcz*pcz)*(pdz*pez+paz*bd+pbz*da)-(pdx*pdx+pdy*pdy+pdz*pdz)*(paz*pey-pbz*ac+pcz*pez)+((pax*pax+pay*pay+paz*paz)*(pbz*pex-pcz*bd+pdz*pey)-(pbx*pbx+pby*pby+pbz*pbz)*(pcz*da+pdz*ac+paz*pex))};var _util=require("module$node_modules$robust_predicates$esm$util"),isperrboundA=(16+224*_util.epsilon)*_util.epsilon,isperrboundB=(5+72*_util.epsilon)*_util.epsilon,isperrboundC=(71+1408*_util.epsilon)*_util.epsilon*_util.epsilon,ab$jscomp$0=(0,_util.vec)(4),bc$jscomp$0=(0,_util.vec)(4),cd=(0,_util.vec)(4),
de=(0,_util.vec)(4),ea=(0,_util.vec)(4),ac=(0,_util.vec)(4),bd=(0,_util.vec)(4),ce=(0,_util.vec)(4),da$jscomp$0=(0,_util.vec)(4),eb=(0,_util.vec)(4),abc=(0,_util.vec)(24),bcd=(0,_util.vec)(24),cde=(0,_util.vec)(24),dea=(0,_util.vec)(24),eab=(0,_util.vec)(24),abd=(0,_util.vec)(24),bce=(0,_util.vec)(24),cda=(0,_util.vec)(24),deb=(0,_util.vec)(24),eac=(0,_util.vec)(24),adet=(0,_util.vec)(1152),bdet=(0,_util.vec)(1152),cdet=(0,_util.vec)(1152),ddet=(0,_util.vec)(1152),edet=(0,_util.vec)(1152),abdet=(0,
_util.vec)(2304),cddet=(0,_util.vec)(2304),cdedet=(0,_util.vec)(3456),deter=(0,_util.vec)(5760),_8=(0,_util.vec)(8),_8b=(0,_util.vec)(8),_8c=(0,_util.vec)(8),_16=(0,_util.vec)(16),_24=(0,_util.vec)(24),_48=(0,_util.vec)(48),_48b=(0,_util.vec)(48),_96=(0,_util.vec)(96),_192=(0,_util.vec)(192),_384x=(0,_util.vec)(384),_384y=(0,_util.vec)(384),_384z=(0,_util.vec)(384),_768=(0,_util.vec)(768),xdet=(0,_util.vec)(96),ydet=(0,_util.vec)(96),zdet=(0,_util.vec)(96),fin=(0,_util.vec)(1152)}
//# sourceMappingURL=module$node_modules$robust_predicates$esm$insphere.js.map
