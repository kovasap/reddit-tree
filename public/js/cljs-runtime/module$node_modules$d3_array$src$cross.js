shadow$provide.module$node_modules$d3_array$src$cross=function(global,require,module,exports){function _typeof(obj$jscomp$0){_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};return _typeof(obj$jscomp$0)}function length$jscomp$0(array){return array.length|0}function empty(length){return!(0<length)}function arrayify(values){return"object"!==
_typeof(values)||"length"in values?values:Array.from(values)}function reducer(reduce){return function(values){var JSCompiler_temp_const=reduce.apply;if(Array.isArray(values)){var JSCompiler_temp=0;for(var arr2=Array(values.length);JSCompiler_temp<values.length;JSCompiler_temp++)arr2[JSCompiler_temp]=values[JSCompiler_temp];JSCompiler_temp=arr2}else JSCompiler_temp=void 0;JSCompiler_temp||(JSCompiler_temp=Symbol.iterator in Object(values)||"[object Arguments]"===Object.prototype.toString.call(values)?
Array.from(values):void 0);if(!(values=JSCompiler_temp))throw new TypeError("Invalid attempt to spread non-iterable instance");return JSCompiler_temp_const.call(reduce,void 0,values)}}Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=function(){for(var _len=arguments.length,values=Array(_len),_key=0;_key<_len;_key++)values[_key]=arguments[_key];_len="function"===typeof values[values.length-1]&&reducer(values.pop());values=values.map(arrayify);_key=values.map(length$jscomp$0);
var j=values.length-1,index=Array(j+1).fill(0),product=[];if(0>j||_key.some(empty))return product;for(;;){product.push(index.map(function(j,i){return values[i][j]}));for(var i$jscomp$0=j;++index[i$jscomp$0]===_key[i$jscomp$0];){if(0===i$jscomp$0)return _len?product.map(_len):product;index[i$jscomp$0--]=0}}}}
//# sourceMappingURL=module$node_modules$d3_array$src$cross.js.map
