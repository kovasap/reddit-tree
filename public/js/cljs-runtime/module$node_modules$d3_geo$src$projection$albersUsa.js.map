{
"version":3,
"file":"module$node_modules$d3_geo$src$projection$albersUsa.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/d3-geo/src/projection/albersUsa.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_geo$src$projection$albersUsa\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _math = require(\"../math.js\");\n\nvar _albers = _interopRequireDefault(require(\"./albers.js\"));\n\nvar _conicEqualArea = _interopRequireDefault(require(\"./conicEqualArea.js\"));\n\nvar _fit = require(\"./fit.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960\u00d7500. The projection also works quite well at 960\u00d7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nfunction _default() {\n  var cache,\n      cacheStream,\n      lower48 = (0, _albers[\"default\"])(),\n      lower48Point,\n      alaska = (0, _conicEqualArea[\"default\"])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = (0, _conicEqualArea[\"default\"])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return (0, _fit.fitExtent)(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return (0, _fit.fitSize)(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function (width, object) {\n    return (0, _fit.fitWidth)(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function (height, object) {\n    return (0, _fit.fitHeight)(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","multiplex","streams","n","length","point","x","y","i","sphere","lineStart","lineEnd","polygonStart","polygonEnd","Object","defineProperty","value","_default","albersUsa","coordinates","_point","lower48Point","alaskaPoint","hawaiiPoint","reset","cache","cacheStream","lower48","_albers","alaska","_conicEqualArea","rotate","center","parallels","hawaii","pointStream","invert","albersUsa.invert","k","scale","t","translate","stream","albersUsa.stream","precision","albersUsa.precision","_","arguments","albersUsa.scale","albersUsa.translate","clipExtent","_math","epsilon","fitExtent","albersUsa.fitExtent","extent","object","_fit","fitSize","albersUsa.fitSize","size","fitWidth","albersUsa.fitWidth","width","fitHeight","albersUsa.fitHeight","height"]
}
