{
"version":3,
"file":"module$node_modules$d3_chord$src$chord.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/d3-chord/src/chord.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_chord$src$chord\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nexports.chordTranspose = chordTranspose;\nexports.chordDirected = chordDirected;\n\nvar _math = require(\"./math.js\");\n\nfunction range(i, j) {\n  return Array.from({\n    length: j - i\n  }, function (_, k) {\n    return i + k;\n  });\n}\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nfunction _default() {\n  return chord(false, false);\n}\n\nfunction chordTranspose() {\n  return chord(false, true);\n}\n\nfunction chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0,\n        dx;\n    matrix = Float64Array.from({\n      length: n * n\n    }, transpose ? function (_, i) {\n      return matrix[i % n][i / n | 0];\n    } : function (_, i) {\n      return matrix[i / n | 0][i % n];\n    }); // Compute the scaling factor from value to angle in [0, 2pi].\n\n    for (var i = 0; i < n; ++i) {\n      var x = 0;\n\n      for (var j = 0; j < n; ++j) {\n        x += matrix[i * n + j] + directed * matrix[j * n + i];\n      }\n\n      k += groupSums[i] = x;\n    }\n\n    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;\n    dx = k ? padAngle : _math.tau / n; // Compute the angles for each group and constituent chord.\n\n    {\n      var _x = 0;\n      if (sortGroups) groupIndex.sort(function (a, b) {\n        return sortGroups(groupSums[a], groupSums[b]);\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var i = _step.value;\n          var x0 = _x;\n\n          if (directed) {\n            var subgroupIndex = range(~n + 1, n).filter(function (j) {\n              return j < 0 ? matrix[~j * n + i] : matrix[i * n + j];\n            });\n            if (sortSubgroups) subgroupIndex.sort(function (a, b) {\n              return sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]);\n            });\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = subgroupIndex[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _j = _step2.value;\n\n                if (_j < 0) {\n                  var _chord = chords[~_j * n + i] || (chords[~_j * n + i] = {\n                    source: null,\n                    target: null\n                  });\n\n                  _chord.target = {\n                    index: i,\n                    startAngle: _x,\n                    endAngle: _x += matrix[~_j * n + i] * k,\n                    value: matrix[~_j * n + i]\n                  };\n                } else {\n                  var _chord2 = chords[i * n + _j] || (chords[i * n + _j] = {\n                    source: null,\n                    target: null\n                  });\n\n                  _chord2.source = {\n                    index: i,\n                    startAngle: _x,\n                    endAngle: _x += matrix[i * n + _j] * k,\n                    value: matrix[i * n + _j]\n                  };\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n\n            groups[i] = {\n              index: i,\n              startAngle: x0,\n              endAngle: _x,\n              value: groupSums[i]\n            };\n          } else {\n            var _subgroupIndex = range(0, n).filter(function (j) {\n              return matrix[i * n + j] || matrix[j * n + i];\n            });\n\n            if (sortSubgroups) _subgroupIndex.sort(function (a, b) {\n              return sortSubgroups(matrix[i * n + a], matrix[i * n + b]);\n            });\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = _subgroupIndex[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var _j2 = _step3.value;\n\n                var _chord3 = void 0;\n\n                if (i < _j2) {\n                  _chord3 = chords[i * n + _j2] || (chords[i * n + _j2] = {\n                    source: null,\n                    target: null\n                  });\n                  _chord3.source = {\n                    index: i,\n                    startAngle: _x,\n                    endAngle: _x += matrix[i * n + _j2] * k,\n                    value: matrix[i * n + _j2]\n                  };\n                } else {\n                  _chord3 = chords[_j2 * n + i] || (chords[_j2 * n + i] = {\n                    source: null,\n                    target: null\n                  });\n                  _chord3.target = {\n                    index: i,\n                    startAngle: _x,\n                    endAngle: _x += matrix[i * n + _j2] * k,\n                    value: matrix[i * n + _j2]\n                  };\n                  if (i === _j2) _chord3.source = _chord3.target;\n                }\n\n                if (_chord3.source && _chord3.target && _chord3.source.value < _chord3.target.value) {\n                  var source = _chord3.source;\n                  _chord3.source = _chord3.target;\n                  _chord3.target = source;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                  _iterator3[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            groups[i] = {\n              index: i,\n              startAngle: x0,\n              endAngle: _x,\n              value: groupSums[i]\n            };\n          }\n\n          _x += dx;\n        };\n\n        for (var _iterator = groupIndex[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } // Remove empty chords.\n\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","range","i","j","Array","from","length","_","k","compareValue","compare","a","b","source","value","target","chord","directed","transpose","matrix","n","groupSums","groupIndex","chords","groups","Float64Array","x","dx","_math","max","tau","padAngle","_x","sortGroups","sort","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_loop","_step","x0","subgroupIndex","filter","sortSubgroups","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","Symbol","iterator","_step2","done","next","_j","index","startAngle","endAngle","err","_subgroupIndex","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_j2","_chord3","_iterator","Object","values","sortChords","chord.padAngle","arguments","chord.sortGroups","chord.sortSubgroups","chord.sortChords","defineProperty","_default","chordTranspose","chordDirected"]
}
