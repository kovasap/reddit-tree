{
"version":3,
"file":"module$node_modules$d3_geo$src$clip$antimeridian.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/d3-geo/src/clip/antimeridian.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_geo$src$clip$antimeridian\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _index = _interopRequireDefault(require(\"./index.js\"));\n\nvar _math = require(\"../math.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = (0, _index[\"default\"])(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\n\nexports[\"default\"] = _default;\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,\n          delta = (0, _math.abs)(lambda1 - lambda0);\n\n      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= _math.pi) {\n        // line crosses antimeridian\n        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies\n\n        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);\n  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * _math.halfPi;\n    stream.point(-_math.pi, phi);\n    stream.point(0, phi);\n    stream.point(_math.pi, phi);\n    stream.point(_math.pi, 0);\n    stream.point(_math.pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-_math.pi, -phi);\n    stream.point(-_math.pi, 0);\n    stream.point(-_math.pi, phi);\n  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {\n    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_index","_interopRequireDefault","obj","__esModule","_math","_default","clipAntimeridianLine","stream","lambda0","NaN","phi0","sign0","_clean","lineStart","point","lambda1","phi1","sign1","pi","delta","abs","epsilon","halfPi","lineEnd","cosPhi0","cosPhi1","sinLambda0Lambda1","sin","atan","cos","clean","clipAntimeridianInterpolate","from","to","direction","phi","lambda"]
}
