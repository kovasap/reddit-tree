{
"version":3,
"file":"module$node_modules$d3_array$src$variance.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/d3-array/src/variance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$src$variance\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = variance;\n\nfunction variance(values, valueof) {\n  var count = 0;\n  var delta;\n  var mean = 0;\n  var sum = 0;\n\n  if (valueof === undefined) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n\n        if (value != null && (value = +value) >= value) {\n          delta = value - mean;\n          mean += delta / ++count;\n          sum += delta * (value - mean);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    var index = -1;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = values[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _value = _step2.value;\n\n        if ((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value) {\n          delta = _value - mean;\n          mean += delta / ++count;\n          sum += delta * (_value - mean);\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  if (count > 1) return sum / (count - 1);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","variance","values","valueof","count","mean","sum","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","done","next","delta","err","index","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value"]
}
