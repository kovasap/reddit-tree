shadow$provide.module$node_modules$d3_scale$src$quantize=function(global,require,module,exports){function quantize(){function scale(x){return null!=x&&x<=x?range[(0,_d3Array.bisect)(domain,x,0,n)]:unknown}function rescale(){var i=-1;for(domain=Array(n);++i<n;)domain[i]=((i+1)*x1-(i-n)*x0)/(n+1);return scale}var x0=0,x1=1,n=1,domain=[.5],range=[0,1],unknown;scale.domain=function(_){if(arguments.length){var JSCompiler_temp=Array.isArray(_)?_:void 0;if(!JSCompiler_temp)if(Symbol.iterator in Object(_)||
"[object Arguments]"===Object.prototype.toString.call(_)){JSCompiler_temp=[];var _n=!0,_d=!1,_e=void 0;try{var JSCompiler_temp$jscomp$0=_[Symbol.iterator]();for(var _s;!(_n=(_s=JSCompiler_temp$jscomp$0.next()).done)&&(JSCompiler_temp.push(_s.value),2!==JSCompiler_temp.length);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=JSCompiler_temp$jscomp$0["return"])JSCompiler_temp$jscomp$0["return"]()}finally{if(_d)throw _e;}}}else JSCompiler_temp=void 0;if(!(JSCompiler_temp$jscomp$0=JSCompiler_temp))throw new TypeError("Invalid attempt to destructure non-iterable instance");
JSCompiler_temp$jscomp$0=(x0=JSCompiler_temp$jscomp$0[0],x1=JSCompiler_temp$jscomp$0[1],_,x0=+x0,x1=+x1,rescale())}else JSCompiler_temp$jscomp$0=[x0,x1];return JSCompiler_temp$jscomp$0};scale.range=function(_){return arguments.length?(n=(range=Array.from(_)).length-1,rescale()):range.slice()};scale.invertExtent=function(y){y=range.indexOf(y);return 0>y?[NaN,NaN]:1>y?[x0,domain[0]]:y>=n?[domain[n-1],x1]:[domain[y-1],domain[y]]};scale.unknown=function(_){return arguments.length?(unknown=_,scale):scale};
scale.thresholds=function(){return domain.slice()};scale.copy=function(){return quantize().domain([x0,x1]).range(range).unknown(unknown)};return _init.initRange.apply((0,_linear.linearish)(scale),arguments)}Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=quantize;var _d3Array=require("module$node_modules$d3_array$src$index"),_linear=require("module$node_modules$d3_scale$src$linear"),_init=require("module$node_modules$d3_scale$src$init")}
//# sourceMappingURL=module$node_modules$d3_scale$src$quantize.js.map
