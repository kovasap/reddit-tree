shadow$provide.module$node_modules$d3_array$src$sort=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _slicedToArray(arr,i){var JSCompiler_temp=Array.isArray(arr)?arr:void 0;if(!JSCompiler_temp)if(Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)){JSCompiler_temp=[];var _n=!0,_d=!1,_e=void 0;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(JSCompiler_temp.push(_s.value),
!i||JSCompiler_temp.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i["return"])_i["return"]()}finally{if(_d)throw _e;}}}else JSCompiler_temp=void 0;if(!(arr=JSCompiler_temp))throw new TypeError("Invalid attempt to destructure non-iterable instance");return arr}function compareDefined(){var compare=0<arguments.length&&void 0!==arguments[0]?arguments[0]:_ascending["default"];if(compare===_ascending["default"])return ascendingDefined;if("function"!==typeof compare)throw new TypeError("compare is not a function");
return function(a,b){var x=compare(a,b);return x||0===x?x:(0===compare(b,b))-(0===compare(a,a))}}function ascendingDefined(a,b){return(null==a||!(a>=a))-(null==b||!(b>=b))||(a<b?-1:a>b?1:0)}Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=function(values){for(var _len=arguments.length,F=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)F[_key-1]=arguments[_key];if("function"!==typeof values[Symbol.iterator])throw new TypeError("values is not iterable");values=Array.from(values);
var f$jscomp$0=_slicedToArray(F,1)[0];return f$jscomp$0&&2!==f$jscomp$0.length||1<F.length?(_len=Uint32Array.from(values,function(d,i){return i}),1<F.length?(F=F.map(function(f){return values.map(f)}),_len.sort(function(i,j){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=F[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var _f=_step.value,c=ascendingDefined(_f[i],_f[j]);if(c)return c}}catch(err){_didIteratorError=
!0,_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator["return"])_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}})):(f$jscomp$0=values.map(f$jscomp$0),_len.sort(function(i,j){return ascendingDefined(f$jscomp$0[i],f$jscomp$0[j])})),(0,_permute["default"])(values,_len)):values.sort(compareDefined(f$jscomp$0))};exports.compareDefined=compareDefined;exports.ascendingDefined=ascendingDefined;var _ascending=_interopRequireDefault(require("module$node_modules$d3_array$src$ascending")),
_permute=_interopRequireDefault(require("module$node_modules$d3_array$src$permute"))}
//# sourceMappingURL=module$node_modules$d3_array$src$sort.js.map
